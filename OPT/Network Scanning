-> Important protocols
    ICMP - for pinging
    TCP - Three-way handshake and reliable connections
    UDP - Faster handshakes and unreliable connections
    GOAL - find weaknesses in the softwares that use these protocols
    Ports - doorways for interaction of network services

-> Tools for network enumeration
    nmap, netcat, masscann

-> nmap

    nmap <ip-address> - scan a single ip address with top 1000 ports
    nmap <192.0.1.1/24>--  Both of them used to scan multiple ip addresses at once
         <192.0.1.1-100>
    -iL <file_name> - Scan targets from the file
    -p - single or a range of ports
    -p- - for scanning all 65535 ports

    -sU - UDP scanning
    -Pn - No ping scan
    output to a file
        -oN = Normal
        -oX = XML file
        -oG = grepable
        -oA = all formats
    -T<0-5> - timed scans

    -sC - used to scan with default scripts
    -sV - used to get the service version
    --script-vuln - used NSE (Nmap scripting engine)
    -A - aggresive scan
    -n - No DNS resolution
    -sn - ping scan, no ports
    --randomized-hosts - scans completely randomized
    --send-eth - sends using way libpcap
    -sT - full three-way handshake

-> masscan

    Need separate open ports to dump information regarding scanned ports
    P.S - Need to learn a bit about "iptables" firewalling
    Has a bit of a learning curve, need to use it regularly

-> netstat

    unencrypted traffic scanning
    nc <target-ip> <port-range>
    -nv - does not resolve DNS
    -w <seconds> - sets timeout
    -z - specific port scan
    -u - UDP mode (unreliable)

-> An example one liner for nmap scanning
    nmap <ip-addr> -sn -n -oG -|awk '/Up$/{print $2}' > file.txt


--> wireshark
    - It is an open source network analyzer/packet sniffer
    - Used to debugging traffic of a website or a host
    - Use filtering to get a good amount of information regarding handshake and traffic

-> Ncat - A project by nmap folks can be used for an encrypted scanning or execution of commands to get most of the scans
    Can be done by
    ncat -nvlp <port_number> --ssl - for an encrypted listening ssl
    ncat <ip_addr> <port_number> --ssl - to connect that port via an ip address in a encrypted fashion

-> Server message block
    Also known as Common internet file system (CIFS)
    Contains in both windows and linux
    Consists of 3 versions:
        SMB 1: Old and disabled on the newer version of windows
        SMB 2: Guest access is disabled and reduces noise
        SMB 3: Uses encryption and credentials. So safe

    Port 139: SMB 1 over NetBIOS, only hostname is required (\\host\files)
    Port 445: SMB 2/3 over IP, need IP address (\\192.0.0.0\files)

    Tools:
        - nmap NSE
        - enum4linux
        - smbclient
        - rpcclient

    Shares need to get access to:
        C$ = C drive of remote host
        Admin$ = Access to windows installation dir
        IPC$ = Inter-process comms, No access to files and dirs (used to trigger eternal blue)

    nmap:
        nmap <target> --script=smb-enum*
        nmap <target> --script=smb-vuln*
        nmap <target> --script=smb-os*

    While querying users and administrators: use 1000(for the first user) followed by 1001, 1002... and 500(for the administrator)

    rpcclient - used to enumerate users and domain users on the SMB (use help)

    smbclient - Main tool, used to login and interact with the files and dirs of the SMB (use help)

    smb logins can be brute-forced using HYDRA combined with ROKU for passwords list

-> Network filesystem (NFS)
    Similar to SMB but also can be mounted locally
    Is open standard and can be used by anyone
    Tools like rpcinfo are used for this purpose
    used to get local access to remote host files, which can be used to generate an SSH key to ultimately control the remote host shell

-> SMTP (simple mail transfer protocol, port: 25)
    nmap <target_addr> --script=smtp* -p <port_number>
    tool used is smtp-user-enum (need to be installed)

-> SNMP (simple network management protocol port: 161)
    stored in database called master information base(MIB) which is further comprised into object identifiers(OIDs)
    consist of three versions
        v1 v2c(no encryption), v3(most secure)
    nmap -sU <target_addr> -p <port_number> --script=snmp-win32-users
    tool used is onesixtyone, snmp-check, snmp-walk

-> FTP (file transfer protocol port:21)
    can login anonymously with limited privileges
    just use - ftp <target_addr>
    also can use HYDRA to brute force the access to the ftp server
    Be sure to be in BINARY mode rather than ASCII mode to download file rather then text files

-> SSH (Secure Shell port:22)
    but be sure to change ports for better security
    uses asymmetric encryption, and very stable than other remote shells
